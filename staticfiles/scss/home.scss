$colors: (
        purple: #241379,
        medium-blue: #2185bf,
        light-blue: #1fbce1,

        red: #b62f56,
        orange: #d5764c,
        yellow: #ffd53e,

        cyan: #78ffba,
        light-green: #98fd85,
        lime: #befb46,

        magenta: #6c046c,
        lightish-red: #f04c81,
        pink: #ff4293
);

body {
    background: radial-gradient(circle, #24246e, #06051f);
    //isolation: isolate;
    overflow: hidden;
    position: relative;
    width: 100vw;
    height: 100vh;
}

.floating-shape,
.floating-shape::before,
.floating-shape::after {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    opacity: 0.9;
    transform-origin: top;
    transition: all 5s linear 0s;
    mix-blend-mode: color-dodge;
}

body:active .floating-shape,
body:active .floating-shape::before,
body:active .floating-shape::after {
    padding: 120px;
}

.floating-shape {
    position: absolute;
    border-radius: 50%;
    transition: all 5s linear 0s;
    opacity: 0.9;
}

@function random-num($min, $max) {
    @return floor(random() * ($max - $min) + $min);
}

@function random-calc($number) {
    $max: 100 - $number;
    $min: $number * -1;
    @return random-num($min, $max);
}

@each $color-name, $color-hex in $colors {
    // Initial top and left positions
    $random1: random(100);
    $random2: random(100);

    // Animated top and left positions
    $random3: random(100);
    $random4: random(100);

    // Animated top and left end positions
    $random5: random(100);
    $random6: random(100);

    .#{$color-name} {
        $size: random-num(5,50) + px;
        animation: #{$color-name} linear 30s alternate infinite;
        border: 2px solid #{$color-hex};
        border-radius: 100%;
        width: $size;
        height: $size;
        transform: translate3d($random1 + vw, $random2 + vh, 0);
        z-index: random(12);

        // Adds floating-shape class
        @extend .floating-shape;
    }

    .#{$color-name}::before {
        animation: #{$color-name}-pseudo linear 15s alternate infinite;
        background: #{$color-hex};
        border: 2px solid #{$color-hex};
        width: random-num(5,50) + px;
        height: random-num(5,50) + px;
        transform: translate3d(random-calc($random1) + vw, random-calc($random2) + vh, 0) rotate((random(360)) + deg);
    }

    .#{$color-name}::after{
        animation: #{$color-name}-pseudo linear 20s alternate infinite;
        border: 2px solid #{$color-hex};
        width: random-num(5,50) + px;
        height: random-num(5,50) + px;
        transform: translate3d(random-calc($random1) + vw, random-calc($random2) + vh, 0) rotate((random(360)) + deg);
    }

    @keyframes #{$color-name} {
        50% {transform: translate3d($random3 + vw, $random4 + vh, 0);}
        100% {transform: translate3d($random5 + vw, $random6 + vh, 0);}
    }

    @keyframes #{$color-name}-pseudo {
        33% {transform: translate3d(random-calc($random3) + vw, random-calc($random4) + vh, 0)
        rotate((random(360)) + deg);
        }
        100% {transform: translate3d(random-calc($random5) + vw, random-calc($random6) + vh, 0)
        rotate((random(360)) + deg);
        }
    }
}

// From here on out I wrote the file. What's above (background) is much too advanced for me,
// it is 90% copied from the author who made it.

.main-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 450px;
    min-height: 250px;
    padding: 30px;
    background: white;
    opacity: 0.95;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    text-align: center;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: center;
    z-index: 100;
}

.logo-container {
    margin-bottom: 15px;
}

.logo-container img {
    width: 150px;
    height: auto;
}

.hidden {
    display: none;
}

form {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 5px;
    align-items: center;
}

input {
    width: 100%;
    max-width: 450px;
    padding: 10px;
    margin-bottom: 5px;
    border: 1px solid black;
    border-radius: 5px;
    font-size: 16px;
    box-sizing: border-box;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

label {
    width: 100%;
    display: block;
    text-align: left;
    font-weight: bold;
    margin-top: 10px;
}

button {
    width: 100%;
    max-width: 350px;
    padding: 12px;
    margin-top: 10px;
    background: #005ecb;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 18px;
    cursor: pointer;
    transition: background 0.3s ease-in-out;
}

button:hover {
    background: #003f9f;
}

a {
    display: block;
    margin-top: 10px;
    text-decoration: none;
    color: #005ecb;
    font-size: 14px;
}

a:hover {
    text-decoration: underline;
}

// Font Changes

body {
    font-family: 'Roboto', sans-serif;
    font-weight: 400;
}

h1, h2 {
    font-weight: 700;
}

p, label, a {
    font-weight: 400;
}

// Errors

// Container that holds the snackbar boxes
#register-snackbar {
    position: fixed;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    display: grid;
    grid-auto-flow: column;     // Lay out in a single horizontal row
    grid-gap: 1rem;             // Horizontal spacing
    justify-content: center;
    align-items: center;
    z-index: 1000;
    pointer-events: none;
}

// Individual snackbar wrapper (optional for animation/structure)
.snackbar {
    display: flex;
    justify-content: center;
    animation: fadeInOut 4s ease forwards;
}

// Actual message styling
.error-box {
    background-color: #ffe6e6;
    color: #b20000;
    border: 1px solid #ff4d4d;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-weight: 500;
    font-size: 0.9rem;
    white-space: nowrap;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}



@keyframes fadeInOut {
    0% {
        opacity: 0;
        transform: translateY(10px);
    }
    10% {
        opacity: 1;
        transform: translateY(0);
    }
    85% {
        opacity: 1;
        transform: translateY(0);
    }
    100% {
        opacity: 0;
        transform: translateY(-10px);
    }
}



